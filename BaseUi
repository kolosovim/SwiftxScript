local UILibrary = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Add global toggle state
local isGuiVisible = true

-- Constants for UI styling (Neverlose theme)
local COLORS = {
    Background = Color3.fromRGB(17, 17, 24), -- Darker blue-black background
    Secondary = Color3.fromRGB(23, 23, 31), -- Slightly lighter background
    Accent = Color3.fromRGB(59, 130, 246), -- Bright blue accent
    AccentDark = Color3.fromRGB(45, 100, 190), -- Darker blue
    Text = Color3.fromRGB(255, 255, 255),
    TextDark = Color3.fromRGB(140, 140, 155),
    Border = Color3.fromRGB(35, 35, 45),
    Selected = Color3.fromRGB(30, 30, 40),
    Disabled = Color3.fromRGB(60, 60, 70)
}

local function createCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 4)
    corner.Parent = instance
    return corner
end

local function createStroke(instance, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or COLORS.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = instance
    return stroke
end

local function createShadow(instance)
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.BackgroundTransparency = 1
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.Size = UDim2.new(1, 24, 1, 24)
    shadow.ZIndex = -1
    shadow.Image = "rbxassetid://7912134082"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.Parent = instance
    return shadow
end

local function createBaseGui()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "NeverloseUI"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    -- Add ZIndexBehavior to ensure proper layering
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 800, 0, 600)
    MainFrame.Position = UDim2.new(0.5, -400, 0.5, -300)
    MainFrame.BackgroundColor3 = COLORS.Background
    MainFrame.BorderSizePixel = 0
    createCorner(MainFrame, 8)
    createShadow(MainFrame)
    MainFrame.Parent = ScreenGui
    
    -- Top bar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 50)
    TopBar.BackgroundColor3 = COLORS.Secondary
    TopBar.BorderSizePixel = 0
    createCorner(TopBar, 8)
    TopBar.Parent = MainFrame
    
    -- Logo/Title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0, 200, 1, 0)
    Title.Position = UDim2.new(0, 20, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = "NEVERLOSE"
    Title.TextColor3 = COLORS.Text
    Title.TextSize = 22
    Title.Font = Enum.Font.GothamBold
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopBar
    
    -- Navigation tabs
    local NavTabs = Instance.new("Frame")
    NavTabs.Name = "NavTabs"
    NavTabs.Size = UDim2.new(0, 600, 0, 40)
    NavTabs.Position = UDim2.new(0, 180, 0, 5)
    NavTabs.BackgroundTransparency = 1
    NavTabs.Parent = TopBar
    
    local TabList = Instance.new("Frame")
    TabList.Name = "TabList"
    TabList.Size = UDim2.new(0, 200, 1, -60)
    TabList.Position = UDim2.new(0, 0, 0, 50)
    TabList.BackgroundColor3 = COLORS.Secondary
    TabList.BorderSizePixel = 0
    createCorner(TabList, 8)
    TabList.Parent = MainFrame
    
    -- Categories
    local Categories = Instance.new("Frame")
    Categories.Name = "Categories"
    Categories.Size = UDim2.new(0, 200, 0, 30)
    Categories.Position = UDim2.new(0, 10, 0, 10)
    Categories.BackgroundTransparency = 1
    Categories.Parent = TabList
    
    local CategoriesLabel = Instance.new("TextLabel")
    CategoriesLabel.Size = UDim2.new(1, 0, 0, 20)
    CategoriesLabel.BackgroundTransparency = 1
    CategoriesLabel.Text = "Categories"
    CategoriesLabel.TextColor3 = COLORS.TextDark
    CategoriesLabel.TextSize = 14
    CategoriesLabel.Font = Enum.Font.GothamMedium
    CategoriesLabel.TextXAlignment = Enum.TextXAlignment.Left
    CategoriesLabel.Parent = Categories
    
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -220, 1, -60)
    ContentContainer.Position = UDim2.new(0, 210, 0, 50)
    ContentContainer.BackgroundColor3 = COLORS.Secondary
    ContentContainer.BorderSizePixel = 0
    createCorner(ContentContainer, 8)
    ContentContainer.Parent = MainFrame
    
    -- Add toggle functionality
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if not gameProcessed and input.KeyCode == Enum.KeyCode.LeftControl then
            isGuiVisible = not isGuiVisible
            MainFrame.Visible = isGuiVisible
        end
    end)
    
    return {
        ScreenGui = ScreenGui,
        MainFrame = MainFrame,
        TopBar = TopBar,
        TabList = TabList,
        ContentContainer = ContentContainer
    }
end

function UILibrary:Window(title)
    local window = {}
    local gui = createBaseGui()
    
    -- Update window title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(0, 200, 1, 0)
    Title.Position = UDim2.new(0, 20, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = title
    Title.TextColor3 = COLORS.Text
    Title.TextSize = 22
    Title.Font = Enum.Font.GothamBold
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = gui.TopBar
    
    function window:Tab(name, iconId)
        local tab = {}
        
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(1, -20, 0, 40)
        tabButton.Position = UDim2.new(0, 10, 0, 0)
        tabButton.BackgroundColor3 = COLORS.Secondary
        tabButton.BackgroundTransparency = 1
        tabButton.BorderSizePixel = 0
        tabButton.Text = ""
        tabButton.AutoButtonColor = false
        tabButton.Parent = gui.TabList
        
        local iconContainer = Instance.new("Frame")
        iconContainer.Size = UDim2.new(0, 30, 0, 30)
        iconContainer.Position = UDim2.new(0, 5, 0.5, -15)
        iconContainer.BackgroundTransparency = 1
        iconContainer.Parent = tabButton
        
        if iconId then
            local icon = Instance.new("ImageLabel")
            icon.Size = UDim2.new(0, 20, 0, 20)
            icon.Position = UDim2.new(0.5, -10, 0.5, -10)
            icon.BackgroundTransparency = 1
            icon.Image = iconId
            icon.ImageColor3 = COLORS.TextDark
            icon.Parent = iconContainer
        end
        
        local tabLabel = Instance.new("TextLabel")
        tabLabel.Size = UDim2.new(1, -50, 1, 0)
        tabLabel.Position = UDim2.new(0, 40, 0, 0)
        tabLabel.BackgroundTransparency = 1
        tabLabel.Text = name
        tabLabel.TextColor3 = COLORS.TextDark
        tabLabel.TextSize = 14
        tabLabel.Font = Enum.Font.GothamMedium
        tabLabel.TextXAlignment = Enum.TextXAlignment.Left
        tabLabel.Parent = tabButton
        
        local contentFrame = Instance.new("ScrollingFrame")
        contentFrame.Name = name .. "Content"
        contentFrame.Size = UDim2.new(1, -20, 1, -20)
        contentFrame.Position = UDim2.new(0, 10, 0, 10)
        contentFrame.BackgroundTransparency = 1
        contentFrame.ScrollBarThickness = 2
        contentFrame.ScrollBarImageColor3 = COLORS.Accent
        contentFrame.Visible = false
        contentFrame.Parent = gui.ContentContainer
        
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = contentFrame
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 10)
        
        -- Selection effect
        local selectedFrame = Instance.new("Frame")
        selectedFrame.Size = UDim2.new(1, 0, 1, 0)
        selectedFrame.BackgroundColor3 = COLORS.Selected
        selectedFrame.BackgroundTransparency = 1
        selectedFrame.BorderSizePixel = 0
        createCorner(selectedFrame, 6)
        selectedFrame.Parent = tabButton
        
        tabButton.MouseEnter:Connect(function()
            if not contentFrame.Visible then
                TweenService:Create(selectedFrame, TweenInfo.new(0.2), {
                    BackgroundTransparency = 0.8
                }):Play()
            end
        end)
        
        tabButton.MouseLeave:Connect(function()
            if not contentFrame.Visible then
                TweenService:Create(selectedFrame, TweenInfo.new(0.2), {
                    BackgroundTransparency = 1
                }):Play()
            end
        end)
        
        tabButton.MouseButton1Click:Connect(function()
            for _, v in pairs(gui.ContentContainer:GetChildren()) do
                if v:IsA("ScrollingFrame") then
                    v.Visible = false
                end
            end
            for _, v in pairs(gui.TabList:GetChildren()) do
                if v:IsA("TextButton") then
                    local selFrame = v:FindFirstChild("Frame")
                    if selFrame then
                        TweenService:Create(selFrame, TweenInfo.new(0.2), {
                            BackgroundTransparency = 1
                        }):Play()
                    end
                    local label = v:FindFirstChild("TextLabel")
                    if label then
                        TweenService:Create(label, TweenInfo.new(0.2), {
                            TextColor3 = COLORS.TextDark
                        }):Play()
                    end
                end
            end
            
            contentFrame.Visible = true
            TweenService:Create(selectedFrame, TweenInfo.new(0.2), {
                BackgroundTransparency = 0
            }):Play()
            TweenService:Create(tabLabel, TweenInfo.new(0.2), {
                TextColor3 = COLORS.Text
            }):Play()
        end)
        
        function tab:Button(text, callback)
            local buttonFrame = Instance.new("Frame")
            buttonFrame.Size = UDim2.new(1, -20, 0, 36)
            buttonFrame.BackgroundColor3 = COLORS.Secondary
            buttonFrame.BorderSizePixel = 0
            createCorner(buttonFrame, 6)
            buttonFrame.Parent = contentFrame
            
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 1, 0)
            button.BackgroundTransparency = 1
            button.Text = text
            button.TextColor3 = COLORS.Text
            button.TextSize = 14
            button.Font = Enum.Font.GothamMedium
            button.Parent = buttonFrame
            
            button.MouseEnter:Connect(function()
                TweenService:Create(buttonFrame, TweenInfo.new(0.2), {
                    BackgroundColor3 = COLORS.Accent
                }):Play()
            end)
            
            button.MouseLeave:Connect(function()
                TweenService:Create(buttonFrame, TweenInfo.new(0.2), {
                    BackgroundColor3 = COLORS.Secondary
                }):Play()
            end)
            
            button.MouseButton1Click:Connect(callback)
        end
        
        function tab:Toggle(text, default, description, callback)
            local toggleFrame = Instance.new("Frame")
            toggleFrame.Size = UDim2.new(1, -20, 0, 36)
            toggleFrame.BackgroundColor3 = COLORS.Secondary
            toggleFrame.BorderSizePixel = 0
            createCorner(toggleFrame, 6)
            toggleFrame.Parent = contentFrame
            
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -60, 1, 0)
            label.Position = UDim2.new(0, 10, 0, 0)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.GothamMedium
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Parent = toggleFrame
            
            local toggle = Instance.new("Frame")
            toggle.Size = UDim2.new(0, 40, 0, 20)
            toggle.Position = UDim2.new(1, -50, 0.5, -10)
            toggle.BackgroundColor3 = default and COLORS.Accent or COLORS.Border
            createCorner(toggle, 10)
            toggle.Parent = toggleFrame
            
            local knob = Instance.new("Frame")
            knob.Size = UDim2.new(0, 16, 0, 16)
            knob.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            knob.BackgroundColor3 = COLORS.Text
            createCorner(knob, 8)
            knob.Parent = toggle
            
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 1, 0)
            button.BackgroundTransparency = 1
            button.Text = ""
            button.Parent = toggleFrame
            
            local state = default
            button.MouseButton1Click:Connect(function()
                state = not state
                local togglePos = state and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
                local toggleColor = state and COLORS.Accent or COLORS.Border
                
                TweenService:Create(knob, TweenInfo.new(0.2), {
                    Position = togglePos
                }):Play()
                
                TweenService:Create(toggle, TweenInfo.new(0.2), {
                    BackgroundColor3 = toggleColor
                }):Play()
                
                callback(state)
            end)
            
            if description then
                local desc = Instance.new("TextLabel")
                desc.Size = UDim2.new(1, -20, 0, 20)
                desc.Position = UDim2.new(0, 10, 1, 0)
                desc.BackgroundTransparency = 1
                desc.Text = description
                desc.TextColor3 = COLORS.TextDark
                desc.TextSize = 12
                desc.Font = Enum.Font.GothamMedium
                desc.TextXAlignment = Enum.TextXAlignment.Left
                desc.Parent = toggleFrame
                
                toggleFrame.Size = UDim2.new(1, -20, 0, 56)
            end
        end
        
        function tab:Slider(text, min, max, default, callback)
            local sliderFrame = Instance.new("Frame")
            sliderFrame.Size = UDim2.new(1, -20, 0, 50)
            sliderFrame.BackgroundColor3 = COLORS.Secondary
            sliderFrame.BorderSizePixel = 0
            createCorner(sliderFrame, 6)
            sliderFrame.Parent = contentFrame
            
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -100, 0, 20)
            label.Position = UDim2.new(0, 10, 0, 5)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.GothamMedium
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Parent = sliderFrame
            
            local valueLabel = Instance.new("TextLabel")
            valueLabel.Size = UDim2.new(0, 80, 0, 20)
            valueLabel.Position = UDim2.new(1, -90, 0, 5)
            valueLabel.BackgroundTransparency = 1
            valueLabel.Text = tostring(default)
            valueLabel.TextColor3 = COLORS.TextDark
            valueLabel.TextSize = 14
            valueLabel.Font = Enum.Font.GothamMedium
            valueLabel.Parent = sliderFrame
            
            local sliderBG = Instance.new("Frame")
            sliderBG.Size = UDim2.new(1, -20, 0, 4)
            sliderBG.Position = UDim2.new(0, 10, 0, 35)
            sliderBG.BackgroundColor3 = COLORS.Border
            createCorner(sliderBG, 2)
            sliderBG.Parent = sliderFrame
            
            local sliderFill = Instance.new("Frame")
            sliderFill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
            sliderFill.BackgroundColor3 = COLORS.Accent
            createCorner(sliderFill, 2)
            sliderFill.Parent = sliderBG
            
            local knob = Instance.new("Frame")
            knob.Size = UDim2.new(0, 12, 0, 12)
            knob.Position = UDim2.new((default - min)/(max - min), -6, 0.5, -6)
            knob.BackgroundColor3 = COLORS.Text
            createCorner(knob, 6)
            knob.Parent = sliderBG
            
            local dragStart
            local startPos
            local dragging = false
            
            knob.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                    dragStart = input.Position
                    startPos = knob.Position
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local delta = input.Position - dragStart
                    local relativeX = startPos.X.Scale + delta.X / sliderBG.AbsoluteSize.X
                    relativeX = math.clamp(relativeX, 0, 1)
                    
                    local value = min + ((max - min) * relativeX)
                    value = math.floor(value)
                    valueLabel.Text = tostring(value)
                    
                    knob.Position = UDim2.new(relativeX, -6, 0.5, -6)
                    sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                    
                    callback(value)
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
        end
        
        function tab:Label(text)
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -20, 0, 30)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.TextDark
            label.TextSize = 14
            label.Font = Enum.Font.GothamMedium
            label.Parent = contentFrame
            
            local labelObj = {}
            
            function labelObj:Set(newText)
                label.Text = newText
            end
            
            return labelObj
        end
        
        function tab:Seperator(text)
            local separator = Instance.new("Frame")
            separator.Size = UDim2.new(1, -20, 0, 30)
            separator.BackgroundTransparency = 1
            separator.Parent = contentFrame
            
            local line1 = Instance.new("Frame")
            line1.Size = UDim2.new(0.3, 0, 0, 1)
            line1.Position = UDim2.new(0, 0, 0.5, 0)
            line1.BackgroundColor3 = COLORS.Border
            line1.Parent = separator
            
            if text then
                local label = Instance.new("TextLabel")
                label.Size = UDim2.new(0.4, 0, 1, 0)
                label.Position = UDim2.new(0.3, 10, 0, 0)
                label.BackgroundTransparency = 1
                label.Text = text
                label.TextColor3 = COLORS.TextDark
                label.TextSize = 14
                label.Font = Enum.Font.GothamBold
                label.Parent = separator
                
                local line2 = Instance.new("Frame")
                line2.Size = UDim2.new(0.3, -10, 0, 1)
                line2.Position = UDim2.new(0.7, 0, 0.5, 0)
                line2.BackgroundColor3 = COLORS.Border
                line2.Parent = separator
            else
                line1.Size = UDim2.new(1, 0, 0, 1)
            end
        end
        
        function tab:Line()
            local line = Instance.new("Frame")
            line.Size = UDim2.new(1, -20, 0, 1)
            line.BackgroundColor3 = COLORS.Border
            line.Parent = contentFrame
        end
        
        function tab:Dropdown(text, options, default, callback)
            local dropdownFrame = Instance.new("Frame")
            dropdownFrame.Size = UDim2.new(1, -20, 0, 36)
            dropdownFrame.BackgroundColor3 = COLORS.Secondary
            dropdownFrame.BorderSizePixel = 0
            createCorner(dropdownFrame, 6)
            dropdownFrame.Parent = contentFrame
            
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -20, 1, 0)
            label.Position = UDim2.new(0, 10, 0, 0)
            label.BackgroundTransparency = 1
            label.Text = text .. ": " .. (default or "Select")
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.GothamMedium
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Parent = dropdownFrame
            
            local optionsFrame = Instance.new("Frame")
            optionsFrame.Size = UDim2.new(1, 0, 0, #options * 30)
            optionsFrame.Position = UDim2.new(0, 0, 1, 5)
            optionsFrame.BackgroundColor3 = COLORS.Secondary
            optionsFrame.BorderSizePixel = 0
            optionsFrame.Visible = false
            optionsFrame.ZIndex = 5
            createCorner(optionsFrame, 6)
            optionsFrame.Parent = dropdownFrame
            
            local UIListLayout = Instance.new("UIListLayout")
            UIListLayout.Parent = optionsFrame
            UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            UIListLayout.Padding = UDim.new(0, 2)
            
            for i, option in ipairs(options) do
                local optionButton = Instance.new("TextButton")
                optionButton.Size = UDim2.new(1, -4, 0, 28)
                optionButton.Position = UDim2.new(0, 2, 0, 2 + (i-1) * 30)
                optionButton.BackgroundColor3 = COLORS.Background
                optionButton.BorderSizePixel = 0
                optionButton.Text = option
                optionButton.TextColor3 = COLORS.Text
                optionButton.TextSize = 14
                optionButton.Font = Enum.Font.GothamMedium
                optionButton.ZIndex = 5
                createCorner(optionButton, 4)
                optionButton.Parent = optionsFrame
                
                optionButton.MouseEnter:Connect(function()
                    TweenService:Create(optionButton, TweenInfo.new(0.2), {
                        BackgroundColor3 = COLORS.Accent
                    }):Play()
                end)
                
                optionButton.MouseLeave:Connect(function()
                    TweenService:Create(optionButton, TweenInfo.new(0.2), {
                        BackgroundColor3 = COLORS.Background
                    }):Play()
                end)
                
                optionButton.MouseButton1Click:Connect(function()
                    label.Text = text .. ": " .. option
                    optionsFrame.Visible = false
                    callback(option)
                end)
            end
            
            local dropdownButton = Instance.new("TextButton")
            dropdownButton.Size = UDim2.new(1, 0, 1, 0)
            dropdownButton.BackgroundTransparency = 1
            dropdownButton.Text = ""
            dropdownButton.Parent = dropdownFrame
            
            dropdownButton.MouseButton1Click:Connect(function()
                optionsFrame.Visible = not optionsFrame.Visible
            end)
            
            UserInputService.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    local mousePos = UserInputService:GetMouseLocation()
                    local framePos = dropdownFrame.AbsolutePosition
                    local frameSize = dropdownFrame.AbsoluteSize
                    
                    if mousePos.X < framePos.X or mousePos.X > framePos.X + frameSize.X or
                       mousePos.Y < framePos.Y or mousePos.Y > framePos.Y + frameSize.Y then
                        if optionsFrame.Visible then
                            optionsFrame.Visible = false
                        end
                    end
                end
            end)
        end
        
        return tab
    end
    
    -- Add anti-AFK functionality
    local antiAFK = true
    local player = game.Players.LocalPlayer
    player.Idled:Connect(function()
        while wait(5) do
            if antiAFK then
                game.VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
                wait(1)
                game.VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
            end
        end
    end)
    
    return window
end

-- Add update functionality for web loading
function UILibrary:Update()
    return self
end

return UILibrary 
