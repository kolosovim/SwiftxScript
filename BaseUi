local UILibrary = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Constants for UI styling (Neverlose.cc inspired theme)
local COLORS = {
    Background = Color3.fromRGB(17, 17, 17), -- Darker background
    Secondary = Color3.fromRGB(25, 25, 25), -- Secondary background
    Accent = Color3.fromRGB(41, 74, 122), -- Blue accent
    AccentHover = Color3.fromRGB(51, 91, 150), -- Lighter blue for hover
    Text = Color3.fromRGB(255, 255, 255),
    TextDark = Color3.fromRGB(180, 180, 180),
    Border = Color3.fromRGB(30, 30, 30),
    Highlight = Color3.fromRGB(65, 105, 225), -- Royal blue highlight
    Error = Color3.fromRGB(255, 71, 71),
    Success = Color3.fromRGB(97, 255, 97)
}

local function createCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 4)
    corner.Parent = instance
    return corner
end

local function createStroke(instance, color, thickness)
    local stroke = Instance.new("UIStroke")
    stroke.Color = color or COLORS.Border
    stroke.Thickness = thickness or 1
    stroke.Parent = instance
    return stroke
end

local function createGradient(instance, colorSequence)
    local gradient = Instance.new("UIGradient")
    gradient.Color = colorSequence or ColorSequence.new({
        ColorSequenceKeypoint.new(0, COLORS.Accent),
        ColorSequenceKeypoint.new(1, COLORS.AccentHover)
    })
    gradient.Parent = instance
    return gradient
end

local function createBaseGui()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "NeverloseUI"
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 650, 0, 450)
    MainFrame.Position = UDim2.new(0.5, -325, 0.5, -225)
    MainFrame.BackgroundColor3 = COLORS.Background
    MainFrame.BorderSizePixel = 0
    createCorner(MainFrame, 6)
    createStroke(MainFrame, COLORS.Border, 1)
    MainFrame.Parent = ScreenGui
    
    -- Top bar with title
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 40)
    TopBar.BackgroundColor3 = COLORS.Secondary
    TopBar.BorderSizePixel = 0
    createCorner(TopBar, 6)
    TopBar.Parent = MainFrame
    
    -- Make the window draggable
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(0, 170, 1, -40)
    TabContainer.Position = UDim2.new(0, 0, 0, 40)
    TabContainer.BackgroundColor3 = COLORS.Secondary
    TabContainer.BorderSizePixel = 0
    TabContainer.Parent = MainFrame
    
    local TabList = Instance.new("ScrollingFrame")
    TabList.Name = "TabList"
    TabList.Size = UDim2.new(1, 0, 1, 0)
    TabList.BackgroundTransparency = 1
    TabList.ScrollBarThickness = 2
    TabList.ScrollBarImageColor3 = COLORS.Accent
    TabList.Parent = TabContainer
    
    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Parent = TabList
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 5)
    
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -180, 1, -50)
    ContentContainer.Position = UDim2.new(0, 175, 0, 45)
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.Parent = MainFrame
    
    return {
        ScreenGui = ScreenGui,
        MainFrame = MainFrame,
        TopBar = TopBar,
        TabList = TabList,
        ContentContainer = ContentContainer
    }
end

function UILibrary:Window(title)
    local window = {}
    local gui = createBaseGui()
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = COLORS.Text
    titleLabel.TextSize = 18
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.Parent = gui.TabList
    
    function window:Tab(name, iconId)
        local tab = {}
        
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name
        tabButton.Size = UDim2.new(1, -20, 0, 36)
        tabButton.Position = UDim2.new(0, 10, 0, 0)
        tabButton.BackgroundColor3 = COLORS.Secondary
        tabButton.BorderSizePixel = 0
        tabButton.Text = name
        tabButton.TextColor3 = COLORS.TextDark
        tabButton.TextSize = 14
        tabButton.Font = Enum.Font.GothamBold
        createCorner(tabButton, 4)
        tabButton.Parent = gui.TabList
        
        -- Add hover effect
        tabButton.MouseEnter:Connect(function()
            TweenService:Create(tabButton, TweenInfo.new(0.2), {
                BackgroundColor3 = COLORS.Accent,
                TextColor3 = COLORS.Text
            }):Play()
        end)
        
        tabButton.MouseLeave:Connect(function()
            if contentFrame.Visible then return end
            TweenService:Create(tabButton, TweenInfo.new(0.2), {
                BackgroundColor3 = COLORS.Secondary,
                TextColor3 = COLORS.TextDark
            }):Play()
        end)
        
        if iconId then
            local icon = Instance.new("ImageLabel")
            icon.Size = UDim2.new(0, 20, 0, 20)
            icon.Position = UDim2.new(0, 8, 0.5, -10)
            icon.BackgroundTransparency = 1
            icon.Image = iconId
            icon.ImageColor3 = COLORS.TextDark
            icon.Parent = tabButton
            
            tabButton.TextXAlignment = Enum.TextXAlignment.Right
            tabButton.Text = "  " .. name .. "  "
        end
        
        local contentFrame = Instance.new("ScrollingFrame")
        contentFrame.Name = name .. "Content"
        contentFrame.Size = UDim2.new(1, 0, 1, 0)
        contentFrame.BackgroundTransparency = 1
        contentFrame.ScrollBarThickness = 4
        contentFrame.Visible = false
        contentFrame.Parent = gui.ContentContainer
        
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = contentFrame
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 5)
        
        tabButton.MouseButton1Click:Connect(function()
            for _, v in pairs(gui.ContentContainer:GetChildren()) do
                if v:IsA("ScrollingFrame") then
                    v.Visible = false
                end
            end
            contentFrame.Visible = true
        end)
        
        function tab:Button(text, callback)
            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, -20, 0, 36)
            button.Position = UDim2.new(0, 10, 0, 0)
            button.BackgroundColor3 = COLORS.Secondary
            button.BorderSizePixel = 0
            button.Text = text
            button.TextColor3 = COLORS.Text
            button.TextSize = 14
            button.Font = Enum.Font.GothamBold
            createCorner(button, 4)
            createGradient(button)
            button.Parent = contentFrame
            
            -- Add hover effect
            button.MouseEnter:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2), {
                    BackgroundColor3 = COLORS.AccentHover
                }):Play()
            end)
            
            button.MouseLeave:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2), {
                    BackgroundColor3 = COLORS.Secondary
                }):Play()
            end)
            
            button.MouseButton1Click:Connect(callback)
        end
        
        function tab:Toggle(text, default, description, callback)
            local toggleFrame = Instance.new("Frame")
            toggleFrame.Size = UDim2.new(1, -10, 0, 30)
            toggleFrame.Position = UDim2.new(0, 5, 0, 0)
            toggleFrame.BackgroundColor3 = COLORS.Accent
            toggleFrame.BorderSizePixel = 0
            toggleFrame.Parent = contentFrame
            
            local toggle = Instance.new("TextButton")
            toggle.Size = UDim2.new(0, 20, 0, 20)
            toggle.Position = UDim2.new(0, 5, 0.5, -10)
            toggle.BackgroundColor3 = default and COLORS.Highlight or COLORS.Border
            toggle.BorderSizePixel = 0
            toggle.Text = ""
            toggle.Parent = toggleFrame
            
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -30, 1, 0)
            label.Position = UDim2.new(0, 30, 0, 0)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.SourceSans
            label.TextXAlignment = Enum.TextXAlignment.Left
            label.Parent = toggleFrame
            
            local state = default
            toggle.MouseButton1Click:Connect(function()
                state = not state
                toggle.BackgroundColor3 = state and COLORS.Highlight or COLORS.Border
                callback(state)
            end)
        end
        
        function tab:Slider(text, min, max, default, callback)
            local sliderFrame = Instance.new("Frame")
            sliderFrame.Size = UDim2.new(1, -10, 0, 50)
            sliderFrame.Position = UDim2.new(0, 5, 0, 0)
            sliderFrame.BackgroundColor3 = COLORS.Accent
            sliderFrame.BorderSizePixel = 0
            sliderFrame.Parent = contentFrame
            
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, 0, 0, 20)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.SourceSans
            label.Parent = sliderFrame
            
            local sliderBG = Instance.new("Frame")
            sliderBG.Size = UDim2.new(1, -10, 0, 5)
            sliderBG.Position = UDim2.new(0, 5, 0, 35)
            sliderBG.BackgroundColor3 = COLORS.Border
            sliderBG.BorderSizePixel = 0
            sliderBG.Parent = sliderFrame
            
            local sliderFill = Instance.new("Frame")
            sliderFill.Size = UDim2.new((default - min)/(max - min), 0, 1, 0)
            sliderFill.BackgroundColor3 = COLORS.Highlight
            sliderFill.BorderSizePixel = 0
            sliderFill.Parent = sliderBG
            
            local valueLabel = Instance.new("TextLabel")
            valueLabel.Size = UDim2.new(0, 50, 0, 20)
            valueLabel.Position = UDim2.new(1, -50, 0, 0)
            valueLabel.BackgroundTransparency = 1
            valueLabel.Text = tostring(default)
            valueLabel.TextColor3 = COLORS.Text
            valueLabel.TextSize = 14
            valueLabel.Font = Enum.Font.SourceSans
            valueLabel.Parent = sliderFrame
            
            local dragging = false
            sliderBG.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local relativeX = math.clamp((input.Position.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
                    local value = min + ((max - min) * relativeX)
                    value = math.floor(value)
                    valueLabel.Text = tostring(value)
                    sliderFill.Size = UDim2.new(relativeX, 0, 1, 0)
                    callback(value)
                end
            end)
        end
        
        function tab:Label(text)
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(1, -10, 0, 20)
            label.Position = UDim2.new(0, 5, 0, 0)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.SourceSans
            label.Parent = contentFrame
            
            local labelObj = {}
            
            function labelObj:Set(newText)
                label.Text = newText
            end
            
            return labelObj
        end
        
        function tab:Seperator(text)
            local separator = Instance.new("Frame")
            separator.Size = UDim2.new(1, -10, 0, 20)
            separator.Position = UDim2.new(0, 5, 0, 0)
            separator.BackgroundTransparency = 1
            separator.Parent = contentFrame
            
            local line1 = Instance.new("Frame")
            line1.Size = UDim2.new(0.4, 0, 0, 1)
            line1.Position = UDim2.new(0, 0, 0.5, 0)
            line1.BackgroundColor3 = COLORS.Border
            line1.BorderSizePixel = 0
            line1.Parent = separator
            
            local label = Instance.new("TextLabel")
            label.Size = UDim2.new(0.2, 0, 1, 0)
            label.Position = UDim2.new(0.4, 0, 0, 0)
            label.BackgroundTransparency = 1
            label.Text = text
            label.TextColor3 = COLORS.Text
            label.TextSize = 14
            label.Font = Enum.Font.SourceSans
            label.Parent = separator
            
            local line2 = Instance.new("Frame")
            line2.Size = UDim2.new(0.4, 0, 0, 1)
            line2.Position = UDim2.new(0.6, 0, 0.5, 0)
            line2.BackgroundColor3 = COLORS.Border
            line2.BorderSizePixel = 0
            line2.Parent = separator
        end
        
        function tab:Line()
            local line = Instance.new("Frame")
            line.Size = UDim2.new(1, -10, 0, 1)
            line.Position = UDim2.new(0, 5, 0, 0)
            line.BackgroundColor3 = COLORS.Border
            line.BorderSizePixel = 0
            line.Parent = contentFrame
        end
        
        function tab:Dropdown(text, options, default, callback)
            local dropdownFrame = Instance.new("Frame")
            dropdownFrame.Size = UDim2.new(1, -10, 0, 30)
            dropdownFrame.Position = UDim2.new(0, 5, 0, 0)
            dropdownFrame.BackgroundColor3 = COLORS.Accent
            dropdownFrame.BorderSizePixel = 0
            dropdownFrame.Parent = contentFrame
            
            local dropdownButton = Instance.new("TextButton")
            dropdownButton.Size = UDim2.new(1, 0, 1, 0)
            dropdownButton.BackgroundTransparency = 1
            dropdownButton.Text = text .. ": " .. (default or "Select")
            dropdownButton.TextColor3 = COLORS.Text
            dropdownButton.TextSize = 14
            dropdownButton.Font = Enum.Font.SourceSans
            dropdownButton.Parent = dropdownFrame
            
            local optionsFrame = Instance.new("Frame")
            optionsFrame.Size = UDim2.new(1, 0, 0, #options * 25)
            optionsFrame.Position = UDim2.new(0, 0, 1, 0)
            optionsFrame.BackgroundColor3 = COLORS.Background
            optionsFrame.BorderSizePixel = 0
            optionsFrame.Visible = false
            optionsFrame.ZIndex = 2
            optionsFrame.Parent = dropdownFrame
            
            for i, option in ipairs(options) do
                local optionButton = Instance.new("TextButton")
                optionButton.Size = UDim2.new(1, 0, 0, 25)
                optionButton.Position = UDim2.new(0, 0, 0, (i-1) * 25)
                optionButton.BackgroundColor3 = COLORS.Accent
                optionButton.BorderSizePixel = 0
                optionButton.Text = option
                optionButton.TextColor3 = COLORS.Text
                optionButton.TextSize = 14
                optionButton.Font = Enum.Font.SourceSans
                optionButton.ZIndex = 2
                optionButton.Parent = optionsFrame
                
                optionButton.MouseButton1Click:Connect(function()
                    dropdownButton.Text = text .. ": " .. option
                    optionsFrame.Visible = false
                    callback(option)
                end)
            end
            
            dropdownButton.MouseButton1Click:Connect(function()
                optionsFrame.Visible = not optionsFrame.Visible
            end)
            
            UserInputService.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    local mousePos = UserInputService:GetMouseLocation()
                    local framePos = dropdownFrame.AbsolutePosition
                    local frameSize = dropdownFrame.AbsoluteSize
                    
                    if mousePos.X < framePos.X or mousePos.X > framePos.X + frameSize.X or
                       mousePos.Y < framePos.Y or mousePos.Y > framePos.Y + frameSize.Y then
                        optionsFrame.Visible = false
                    end
                end
            end)
        end
        
        return tab
    end
    
    return window
end

return UILibrary 
